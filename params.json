{
  "name": "Chromium-efl",
  "tagline": "",
  "body": "## Introduction\r\n\r\nchromium-efl is a Chromium/Blink engine port to tizen/efl platform. The port\r\nimplements Chromium/Blink platform APIs.\r\n\r\nIt also exposes a webview API implementation based on chromium-efl port. It is\r\nsupposed to be completely source and binary compatible with EFL-WebKit2.\r\n\r\n## Details\r\n\r\n1. gclient pulls chromium-efl into \"src/tizen_src\".\r\n2. The it runs 3 custom hooks in order to get the rest of the source:\r\n\r\n```\r\n* fetch-src-blink: src/tizen_src/sync_repos.sh is called and\r\n    pulls in src and src/third_party/WebKit from a pre-defined locations.\r\n* generate-gclient-xwalk: .gclient-xwalk is created by running\r\n    src/tizen_src/scripts/xwalkgenerate_gclient-xwalk.py (this is a fork\r\n    of the same script in xwalk repository).\r\n* fetch-deps: actually fetches all depedencies in .gclient-xwalk.\r\n```\r\n\r\n## Procedure\r\n\r\n* create .gclient file (as below)\r\n\r\n```\r\nsolutions = [\r\n  { \"name\"        : \"src/tizen_src\",\r\n    \"url\"         : \"git@github.com:crosswalk-project/chromium-efl.git@efl/crosswalk-10/39.0.2171.19\",\r\n    \"managed\"     : True,\r\n    \"custom_hooks\": [\r\n      {\r\n        # fetch custom src and blink repositories.\r\n        \"name\": \"fetch-src-blink\",\r\n        \"pattern\": \".\",\r\n        \"action\": [\"src/tizen_src/sync_repos.sh\"],\r\n      },\r\n      {\r\n        # Generate .gclient-xwalk for Crosswalk's dependencies.\r\n        \"name\": \"generate-gclient-xwalk\",\r\n        \"pattern\": \".\",\r\n        \"action\": [\"python\", \"src/tizen_src/scripts/xwalk/generate_gclient-xwalk.py\"],\r\n      },\r\n      {\r\n        # Fetch Crosswalk dependencies.\r\n        \"name\": \"fetch-deps\",\r\n        \"pattern\": \".\",\r\n        \"action\": [\"python\", \"src/xwalk/tools/fetch_deps.py\", \"-v\"],\r\n      },\r\n      {\r\n        # At some point, we will integrate to gyp_xwalk. Not now...\r\n        \"name\": \"gyp-xwalk\",\r\n      }\r\n    ],\r\n    \"safesync_url\": \"\",\r\n  },\r\n]\r\ncache_dir = None\r\n```\r\n\r\n    $ gclient sync\r\n\r\n## Building\r\n\r\n* For Desktop build\r\n\r\n    $ ./build/build_desktop.sh [-h|--help] [--skip-gyp] [--skip-ninja] [--ccache] [--debug]\r\n\r\n## Coding style\r\n\r\nInternally we use the chromium coding style: http://www.chromium.org/developers/coding-style.\r\nFor public headers we follow efl style.\r\n\r\n## License\r\n\r\nChromium-efl's code uses the BSD license, see our `LICENSE` file.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}